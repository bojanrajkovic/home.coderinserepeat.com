name: Terraform Validation

on:
  pull_request:
    branches:
      - main
    paths:
      - "terraform/**/*.tf"
      - ".github/workflows/terraform-validation.yml"
  push:
    branches:
      - main
    paths:
      - "terraform/**/*.tf"
  workflow_dispatch:

jobs:
  discover-modules:
    name: Discover Terraform modules
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.find-modules.outputs.modules }}

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Find Terraform modules
        id: find-modules
        run: |
          # Find all directories containing terraform.tf files
          modules=$(find terraform -type f -name "terraform.tf" -exec dirname {} \; | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "modules=$modules" >> $GITHUB_OUTPUT
          echo "Found modules:"
          echo "$modules" | jq -r '.[]'

  validate-modules:
    name: Validate ${{ matrix.module }}
    runs-on: ubuntu-latest
    needs: discover-modules
    if: needs.discover-modules.outputs.modules != '[]'

    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJson(needs.discover-modules.outputs.modules) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install mise and OpenTofu
        uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac # v2
        with:
          install: true
          cache: true

      - name: Terraform Format Check
        id: fmt
        run: tofu fmt -check -recursive
        working-directory: ${{ matrix.module }}
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: tofu init -backend=false
        working-directory: ${{ matrix.module }}
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: tofu validate -no-color
        working-directory: ${{ matrix.module }}
        continue-on-error: true

      - name: Check results
        if: steps.fmt.outcome == 'failure' || steps.init.outcome == 'failure' || steps.validate.outcome == 'failure'
        run: |
          echo "::error::Validation failed for ${{ matrix.module }}"
          exit 1
